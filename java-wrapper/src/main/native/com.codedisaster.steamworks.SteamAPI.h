/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_codedisaster_steamworks_SteamAPI */

#ifndef _Included_com_codedisaster_steamworks_SteamAPI
#define _Included_com_codedisaster_steamworks_SteamAPI
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_codedisaster_steamworks_SteamAPI
 * Method:    nativeInit
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_codedisaster_steamworks_SteamAPI_nativeInit
  (JNIEnv *, jclass);

/*
 * Class:     com_codedisaster_steamworks_SteamAPI
 * Method:    nativeShutdown
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_codedisaster_steamworks_SteamAPI_nativeShutdown
  (JNIEnv *, jclass);

/*
 * Class:     com_codedisaster_steamworks_SteamAPI
 * Method:    runCallbacks
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_com_codedisaster_steamworks_SteamAPI_runCallbacks
  (JNIEnv *, jclass);

/*
 * Class:     com_codedisaster_steamworks_SteamAPI
 * Method:    isSteamRunning
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_com_codedisaster_steamworks_SteamAPI_isSteamRunning
  (JNIEnv *, jclass);

/*
 * Class:     com_codedisaster_steamworks_SteamAPI
 * Method:    getSteamUserStatsPointer
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_codedisaster_steamworks_SteamAPI_getSteamUserStatsPointer
  (JNIEnv *, jclass);

/*
 * Class:     com_codedisaster_steamworks_SteamAPI
 * Method:    getSteamRemoteStoragePointer
 * Signature: ()J
 */
JNIEXPORT jlong JNICALL Java_com_codedisaster_steamworks_SteamAPI_getSteamRemoteStoragePointer
  (JNIEnv *, jclass);

#ifdef __cplusplus
}
#endif
#endif
